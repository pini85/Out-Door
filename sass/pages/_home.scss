.section-about {
  background-color:$color-grey-light-1;
  padding: 25rem 0;
  margin-top: -20vh;

    @include respond(tab-port) { padding: 28rem 0; }
    @include respond(phone) { padding: 24rem 0 15rem 0; }
     @include respond(phone-small) { padding:20rem 0 15rem 0; }
}

.section-features {
  margin-top: -11rem;
  padding: 20rem 0;
  background-image: linear-gradient(to right bottom,
  rgba($color-primary, 0.8),
  rgba($color-primary-dark, 0.8)),
  url(../img/nat-4.jpg);
  background-size: cover;
  transform: skewY(-7deg);

  & > * { // we want to modify the boxes so that they skey to the opposite direction. We are using the > the direct children * all
    //of them. if we didnt use > we would be aiming at all the children but we want only the direct children. The first child Which in our case is the row.
    //If not all the h3 and p and will be skewed too.
   transform: skewY(7deg);
 }

  @include respond(tab-port) { padding: 11rem 0rem 6rem 0rem; }
  @include respond(phone) {  padding: 10rem 0 4rem 0; }
  @include respond(phone-small) { padding: 10rem 5rem 4rem 5rem; }

}

.section-tours {
  margin-top: -11rem;
  background-color:$color-grey-light-1;
  padding: 25rem 0 15rem 0;// we gave this special padding because of the skewY above to make it look natural.

  @include respond(tab-port) { padding: 20rem 0 10rem 0; }
  @include respond(phone) { padding: 17rem 0 5rem 0; }


}

.section-stories {
  position: relative; // this is for the bg-video that is set to position relative.
  padding: 15rem 0;


  @include respond(tab-port) { padding: 10rem 0 5rem 0; }
  @include respond(phone) { padding: 7rem 0 5rem 0; }
}

.section-booking {
  padding: 15rem 0;
  background-image: linear-gradient($color-primary-light, $color-primary-dark);

  // @include respond(tab-land) { padding: 12rem 15rem 12rem 15rem; }

}

